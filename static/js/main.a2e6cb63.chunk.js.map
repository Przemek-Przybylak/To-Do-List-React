{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","content","setcontent","className","onSubmit","event","preventDefault","trim","value","onChange","target","placeholder","Tasks","tasks","hideDone","removeTasks","toggleTaskDone","map","task","done","onClick","id","Buttons","toggleHideDone","setAllDone","lenght","disabled","every","Section","tittle","body","extraHeaderContent","Header","container","children","App","setTasks","setHideDone","Container","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2e6cb63.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({addNewTask}) => {\r\n\r\n    const [content, setcontent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        addNewTask(content.trim());\r\n        setcontent(\"\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"section__form\" onSubmit={onFormSubmit}>\r\n            <p className=\"section__paragraph\">\r\n                <label>\r\n                    <input\r\n                        value={content}\r\n                        onChange={({target}) => setcontent(target.value)}\r\n                        className=\"section__input\"\r\n                        placeholder=\"Co jest do zrobienia?\"\r\n                    />\r\n                </label>\r\n            </p>\r\n            <button className=\"section__button\">\r\n                Dodaj zadanie\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form","import \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTasks, toggleTaskDone }) => (\r\n    <ul className=\"section__list \">\r\n        {tasks.map(task => (\r\n            <li key={task.id}\r\n                className={`section__item ${hideDone && task.done ? \"button--hidden\" : \"\"}`}\r\n            >\r\n                <button \r\n                onClick={ () => toggleTaskDone(task.id)}\r\n                className=\"section__imageButton section__imageButton--green\"\r\n                >\r\n                    {task.done ? \"âœ”\" : \"\"}\r\n                </button>\r\n                <span className={`section__task ${task.done ? \"section__item--strikeout\" : \"\"}`}\r\n                >\r\n                    {task.content}</span>\r\n                <button \r\n                onClick={ () => removeTasks(task.id)} \r\n                className=\"section__imageButton section__imageButton--red\"\r\n                >ðŸ—‘\r\n                </button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n)\r\n\r\nexport default Tasks;","import \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => {\r\n\r\n  if (tasks.lenght === 0) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"button\">\r\n      <button\r\n        onClick={toggleHideDone}\r\n        className=\"button__item button__item--hidingDone\"\r\n        disabled={tasks.every(({ done }) => done)}\r\n      >\r\n        {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n      </button>\r\n      <button\r\n        onClick={setAllDone}\r\n        className=\"button__item button__item--doneAll\"\r\n        disabled={tasks.every(({ done }) => done)}\r\n      >UkoÅ„cz wszystkie</button>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\n\r\n\r\nexport default Buttons","import \"./style.css\";\r\n\r\nconst Section = ({ tittle, body, extraHeaderContent }) => (\r\n    <section className=\"section section__tasks\">\r\n        <div className=\"section__container section__container--tittleTask\">\r\n            <h2 className=\"section__tittle\">{tittle}</h2>\r\n            {extraHeaderContent}\r\n        </div>\r\n        {body}\r\n    </section>\r\n)\r\n\r\nexport default Section","import \"./style.css\";\r\n\r\nconst Header = ({ tittle }) => (\r\n    <header className=\"header\">\r\n        <h1 className=\"header__tittle\">{tittle}</h1>\r\n    </header>\r\n)\r\n\r\nexport default Header","import \"./style.css\"\r\n\r\nconst container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n)\r\n\r\nexport default container","import { useState } from \"react\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\n\n\n\n\nfunction App() {\n\n  const addNewTask =(content) => {\n    \n    if (content === \"\")\n    return \"\";\n    \n\n    return (setTasks(tasks =>[\n      ...tasks,\n      {\n        content, \n        done:false, \n        id: tasks.length ? tasks[tasks.length -1].id +1 :1,\n      },\n    ])\n  )};\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => {\n      return {\n        ...task,\n        done: true,\n      }\n    }));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n      return task;\n    }\n    ));\n  };\n\n  const [tasks, setTasks] = useState([\n    { id: 1, content: \"obejrzeÄ‡ mecz\", done: false },\n    { id: 2, content: \"zjeÅ›Ä‡ obiad\", done: true },\n  ]);\n\n  const removeTasks = (id) => {\n    setTasks(tasks => tasks.filter(\n      task => task.id !== id));\n  };\n\n  const [hideDone, setHideDone] = useState(false)\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone)\n  }\n\n  return (\n    <Container>\n      <Header\n        tittle=\"Lista zadaÅ„\"\n      />\n\n      <Section\n        tittle=\"Dodaj nowe zadanie\"\n        body={< Form addNewTask={addNewTask} />}\n      />\n\n      <Section\n        tittle=\"Lista zadaÅ„\"\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTasks={removeTasks}\n            toggleTaskDone={toggleTaskDone}\n          />}\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone} />}\n      />\n\n    </Container>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
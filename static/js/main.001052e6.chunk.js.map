{"version":3,"sources":["features/tasks/tasksLocalStorage.js","features/tasks/TasksPage/state/tasksSlice.js","features/tasks/TasksPage/Form/styled.js","features/tasks/Input/index.js","features/tasks/TasksPage/Form/index.js","features/tasks/TasksPage/TasksList/styled.js","features/App/styled.js","features/tasks/SearchQueryParamName.js","features/tasks/TasksPage/TasksList/index.js","common/section/Buttons/styled.js","common/section/Buttons/index.js","common/section/Section/Styled.js","common/section/Section/index.js","features/Header/styled.js","features/Header/index.js","common/Container/styled.js","common/Container/index.js","common/section/Button/index.js","features/tasks/TasksPage/Search/styled.js","features/tasks/TasksPage/Search/index.js","QueryParameters.js","features/tasks/TasksPage/index.js","features/tasks/TaskPage/styled.js","features/tasks/TaskPage/index.js","features/author/styled.js","features/author/AuthorPage.js","features/NavList/styled.js","features/NavList/index.js","features/App/App.js","features/tasks/getExamplesTasks.js","features/tasks/TasksPage/state/tasksSaga.js","core/rootSaga.js","core/store.js","reportWebVitals.js","index.js"],"names":["localStorageKey","saveTasksInLocalStorage","tasks","localStorage","setItem","JSON","stringify","taskSlice","createSlice","name","initialState","parse","getItem","getTasksFromLocalStorage","hideDone","reducers","addTask","payload","push","toggleHideDone","state","toggleTaskDone","action","index","findIndex","task","id","done","setAllDone","forEach","removeTask","removeIndex","splice","fetchExampleTasks","loading","fetchExampleTasksSuccess","fetchExampleTasksError","actions","selectTaskState","selectTask","selectHideDone","selectLoading","StyledForm","styled","form","Button","button","Input","input","p","Paragraph","Form","useState","content","setcontent","dispatch","useDispatch","inputRef","useRef","onSubmit","event","preventDefault","trim","nanoid","current","focus","ref","value","onChange","target","placeholder","List","ul","Item","li","hidden","css","toggleDone","remove","Content","span","StyledNavLink","NavLink","StyledLink","Link","SearchQueryParamName","TasksList","location","useLocation","query","URLSearchParams","search","get","useSelector","filter","toUpperCase","includes","selectTasksByQuery","map","onClick","to","ButtonItem","disabled","Buttons","length","every","StyledSection","section","SectionContainer","div","TitleWrapper","h2","Section","title","body","extraHeaderContent","StyledHeader","header","Title","h1","Header","Container","main","container","children","Wrapper","Search","key","useQueryParameter","replaceQueryParameter","history","useHistory","searchParams","undefined","delete","set","newSearch","toString","pathname","useReplaceQueryParameter","TasksPage","TaskPage","useParams","taskId","find","getTaskById","Article","article","AuthorPage","Ul","Li","NavList","App","path","getExampleTasks","a","fetch","response","ok","Error","statusText","json","FetchExampleTasksHandler","saveTasksInLocalStorageHandler","tasksSaga","delay","call","exampleTasks","put","alert","select","takeEvery","type","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","tasksReducer","middleware","run","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAAMA,EAAkB,QAEXC,EAA0B,SAAAC,GAAK,OACxCC,aAAaC,QAAQJ,EAAiBK,KAAKC,UAAUJ,KCAnDK,EAAYC,YAAY,CAC1BC,KAAM,QACNC,aAAc,CACVR,MDDgC,wBACpC,UAAAG,KAAKM,MAAMR,aAAaS,QAAQZ,WAAhC,eAAmDE,QAAS,GCAjDW,GACPC,UAAU,GAEdC,SAAU,CACNC,QAAS,cAA6B,IAA1Bd,EAAyB,EAAzBA,MAAWe,EAAc,EAAdA,QACnBf,EAAMgB,KAAKD,IAEfE,eAAgB,SAAAC,GACZA,EAAMN,UAAYM,EAAMN,UAE5BO,eAAgB,SAACD,EAAOE,GACpB,IAAMC,EAAQH,EAAMlB,MAAMsB,WAAU,SAAAC,GAAI,OAAIA,EAAKC,KAAOJ,EAAOL,WAC/DG,EAAMlB,MAAMqB,GAAOI,MAAQP,EAAMlB,MAAMqB,GAAOI,MAElDC,WAAY,SAAAR,GACRA,EAAMlB,MAAM2B,SAAQ,SAAAJ,GAChBA,EAAKE,MAAO,MAGpBG,WAAY,SAACV,EAAOE,GAChB,IAAMS,EAAcX,EAAMlB,MAAMsB,WAAU,SAAAC,GAAI,OAAIA,EAAKC,KAAOJ,EAAOL,WACrEG,EAAMlB,MAAM8B,OAAOD,EAAa,IAEpCE,kBAAmB,SAAAb,GAAWA,EAAMc,SAAU,GAC9CC,yBAA0B,SAACf,EAAD,GAAgC,IAAblB,EAAY,EAArBe,QAChCG,EAAMlB,MAAQA,EACdkB,EAAMc,SAAU,GAEpBE,uBAAwB,SAAChB,GACrBA,EAAMc,SAAU,MAIrB,EASH3B,EAAU8B,QARVrB,EADG,EACHA,QACAmB,EAFG,EAEHA,yBACAhB,EAHG,EAGHA,eACAE,EAJG,EAIHA,eACAO,EALG,EAKHA,WACAE,EANG,EAMHA,WACAG,EAPG,EAOHA,kBACAG,EARG,EAQHA,uBAESE,EAAkB,SAAAlB,GAAK,OAAIA,EAAMlB,OACjCqC,EAAa,SAAAnB,GAAK,OAAIkB,EAAgBlB,GAAOlB,OAC7CsC,EAAiB,SAAApB,GAAK,OAAIkB,EAAgBlB,GAAON,UAWjD2B,EAAgB,SAAArB,GAAK,OAAIkB,EAAgBlB,GAAOc,SAC9C3B,KAAf,Q,gBC7DamC,GAAaC,KAAOC,KAAV,wMAWVC,GAASF,KAAOG,OAAV,2cAwBNC,GAAQJ,KAAOK,MAAV,+PCnCLD,IDiDYJ,KAAOM,EAAV,oFCjDDN,KAAOK,MAAV,gQAcLE,GAAYP,KAAOM,EAAV,oF,QC2BPE,GApCF,WACT,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,cACXC,EAAWC,iBAAO,MAcxB,OACI,gBAAChB,GAAD,CAAYiB,SAbK,SAACC,GAClBA,EAAMC,iBACNN,EAASvC,EAAQ,CACbqC,QAASA,EAAQS,OACjBnC,MAAM,EACND,GAAIqC,iBAER/C,IACAsC,EAAW,IACXG,EAASO,QAAQC,SAIjB,UACI,eAAC,GAAD,UACI,iCACI,eAAC,GAAD,CACIC,IAAKT,EACLU,MAAOd,EACPe,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBf,EAAWe,EAAOF,QAC5CG,YAAY,8BAIxB,eAAC,GAAD,gCClCCC,GAAO5B,KAAO6B,GAAV,+GAMJC,GAAO9B,KAAO+B,GAAV,6NAOP,qBAAGC,QAAuBC,aAAJ,oEAKnB/B,GAASF,KAAOG,OAAV,8JAMT,qBAAG+B,YAA+BD,aAAJ,+SAa9B,qBAAGE,QAAuBF,aAAJ,uVAenBG,GAAUpC,KAAOqC,KAAV,+CACV,qBAAGrD,MAAmBiD,aAAJ,iECpDfK,GAAgBtC,aAAOuC,IAAPvC,CAAH,gIASbwC,GAAaxC,aAAOyC,IAAPzC,CAAH,wJCVR0C,GAFc,SC+CdC,GAvCG,WACd,IAAMC,EAAWC,cAEXC,EADe,IAAIC,gBAAgBH,EAASI,QACvBC,IAAIP,IAEzBnF,EAAQ2F,aAAY,SAAAzE,GAAK,OPyCD,SAACA,EAAOqE,GACtC,IAAMvF,EAAQqC,EAAWnB,GACzB,OAAKqE,GAA0B,KAAjBA,EAAM3B,OAGb5D,EAAM4F,QAAO,qBAAGzC,QAAsB0C,cAAcC,SAASP,EAAM3B,OAAOiC,kBAFtE7F,EO5CwB+F,CAAmB7E,EAAOqE,MACvD3E,EAAW+E,YAAYrD,GACvBe,EAAWC,cAEjB,OACI,eAACe,GAAD,UACKrE,EAAMgG,KAAI,SAACzE,GAAD,OACP,gBAACgD,GAAD,CAEIE,OAAQlD,EAAKE,MAAQb,EAFzB,UAII,eAAC,GAAD,CACIqF,QAAS,kBAAM5C,EAASlC,EAAeI,EAAKC,MAC5CmD,YAAU,EAFd,SAIKpD,EAAKE,KAAO,SAAM,KAEvB,eAACoD,GAAD,CACIpD,MAAI,EADR,SAGI,eAACwD,GAAD,CAAYiB,GAAE,mBAAc3E,EAAKC,IAAjC,SAAwCD,EAAK4B,YAEjD,eAAC,GAAD,CACI8C,QAAS,kBAAM5C,EAASzB,EAAWL,EAAKC,MACxCoD,QAAM,EAFV,4BAdKrD,EAAKC,UCnBjB2E,GAAa1D,KAAOG,OAAV,6UAgBjB,qBAAGwD,UAA2B1B,aAAJ,wFCYjB2B,GA1BC,WACd,IAAMzF,EAAW+E,YAAYrD,GACvBtC,EAAQ2F,YAAYtD,GACpBgB,EAAWC,cAEjB,OAAqB,IAAjBtD,EAAMsG,OACD,KAGP,iCACE,gBAACH,GAAD,CACEF,QAAS,kBAAM5C,EAASpC,MACxBmF,SAAUpG,EAAMuG,OAAM,qBAAG9E,QAF3B,UAIGb,EAAW,aAAU,QAJxB,qBAMA,eAACuF,GAAD,CACEF,QAAS,kBAAM5C,EAAS3B,MACxB0E,SAAUpG,EAAMuG,OAAM,qBAAG9E,QAF3B,uCClBO+E,GAAgB/D,KAAOgE,QAAV,mFAKbC,GAAmBjE,KAAOkE,IAAV,iQAYhBC,GAAenE,KAAOoE,GAAV,iLCLVC,GAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,mBAAhB,OACZ,gBAACT,GAAD,WACI,gBAACE,GAAD,WACI,eAACE,GAAD,UACKG,IAEJE,KAEJD,MCRIE,GAAezE,KAAO0E,OAAV,6EAKZC,GAAQ3E,KAAO4E,GAAV,0KCGHC,GARA,SAAC,GAAD,IAAGP,EAAH,EAAGA,MAAH,OACX,eAACG,GAAD,UACI,eAACE,GAAD,UACKL,OCHAQ,GAAY9E,KAAO+E,KAAV,+RCMPC,GANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,eAACH,GAAD,UACKG,KCAI/E,GAAS,WAClB,IAAMU,EAAWC,cACXtB,EAAU2D,YAAYpD,GAE5B,OACI,eAAC4D,GAAD,CAAYC,SAAUpE,EAASiE,QAAS,kBAAM5C,EAAStB,MAAvD,SAEQC,EAAU,oBAAiB,sCCT9B2F,GAAUlF,KAAOkE,IAAV,sDCyBLiB,GAtBA,WACX,IAAMrC,ECJuB,SAAAsC,GAC7B,IAAMxC,EAAWC,cAEjB,OADqB,IAAIE,gBAAgBH,EAASI,QAC9BC,IAAImC,GDCVC,CAAkB3C,IAC1B4C,ECC8B,WACpC,IAAM1C,EAAWC,cACX0C,EAAUC,cAEhB,OAAO,YAAqB,IAAlBJ,EAAiB,EAAjBA,IAAK5D,EAAY,EAAZA,MACLiE,EAAe,IAAI1C,gBAAgBH,EAASI,aAErC0C,IAAVlE,EACCiE,EAAaE,OAAOP,GAEpBK,EAAaG,IAAIR,EAAK5D,GAG1B,IAAMqE,EAAYJ,EAAaK,WAC/BP,EAAQhH,KAAR,UAAgBqE,EAASmD,SAAzB,YAAqCF,KDfXG,GAS9B,OACI,eAACd,GAAD,UACI,eAAC9E,GAAD,CACIuB,YAAY,kBACZH,MAAOsB,GAAS,GAChBrB,SAZU,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrB4D,EAAsB,CAClBF,IAAK1C,GACLlB,MAA+B,KAAxBE,EAAOF,MAAML,OAAgBO,EAAOF,WAAQkE,UEHxD,SAASO,KAEd,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,CACE3B,MAAM,qBAER,eAAC,GAAD,CACEA,MAAM,qBACNC,KACE,eAAE,GAAF,IAEFC,mBACE,eAAC,GAAD,MAGJ,eAAC,GAAD,CACEF,MAAM,eACNC,KACE,eAAC,GAAD,MAGJ,eAAC,GAAD,CACED,MAAM,mBACNC,KACE,eAAC,GAAD,IAEFC,mBACE,eAAC,GAAD,SCnCH,I,MAAMU,GAAUlF,KAAOkE,IAAV,iDCMb,SAASgC,KACZ,IAAQnH,EAAOoH,cAAPpH,GACFD,EAAOoE,aAAY,SAAAzE,GAAK,OtB0CP,SAACA,EAAO2H,GAAR,OACvBxG,EAAWnB,GAAO4H,MAAK,qBAAGtH,KAAgBqH,KsB3CRE,CAAY7H,EAAOM,MAEvD,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,CACEuF,MAAM,8BAER,eAAC,GAAD,CACEA,MAAOxF,EAAOA,EAAK4B,QAAU,yBAC7B6D,OAAQzF,GACJ,gBAAC,GAAD,WACE,sDADF,IAC+BA,EAAKE,KAAO,MAAQ,cCnBxD,I,MAAMuH,GAAUvG,KAAOwG,QAAV,6HAOPjG,GAAYP,KAAOM,EAAV,8DCJTmG,GAAa,WACtB,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CACInC,MAAM,cAEV,eAAC,GAAD,CACIA,MAAM,oBACNC,KACI,qCACI,gBAACgC,GAAD,WACG,eAAC,GAAD,qTAKC,gBAAC,GAAD,+FAC2E,sCAD3E,YAEA,2CAFA,yGAGA,kDAHA,OAKA,eAAC,GAAD,0QCxBfG,GAAK1G,KAAO6B,GAAV,gMAUF8E,GAAK3G,KAAO+B,GAAV,4HCRF6E,GAAU,WACnB,OACI,gBAACF,GAAD,WACI,eAACC,GAAD,UACI,eAACrE,GAAD,CAAemB,GAAG,WAAlB,uBAEJ,eAACkD,GAAD,UACI,eAACrE,GAAD,CAAemB,GAAG,UAAlB,6BCJHoD,GAAM,kBACf,eAAC,IAAD,UACI,iCACI,eAAC,GAAD,IACA,gBAAC,IAAD,WACI,eAAC,IAAD,CAAOC,KAAK,eAAZ,SACI,eAACZ,GAAD,MAEJ,eAAC,IAAD,CAAOY,KAAK,WAAZ,SACI,eAACb,GAAD,MAEJ,eAAC,IAAD,CAAOa,KAAK,UAAZ,SACI,eAAC,GAAD,MAEJ,eAAC,IAAD,CAAOA,KAAK,IAAZ,SACI,eAAC,IAAD,CAAUrD,GAAG,wB,wDCtBpBsD,GAAe,yCAAG,6BAAAC,EAAA,sEACJC,MAAM,uCADF,cACrBC,EADqB,QAGbC,IACV,IAAIC,MAAMF,EAASG,YAJI,SAOdH,EAASI,OAPK,mFAAH,qD,aCKlBC,I,aAWAC,I,aAKOC,IAhBjB,SAAUF,KAAV,wEAEQ,OAFR,kBAEcG,aAAM,KAFpB,OAG6B,OAH7B,SAGmCC,aAAKZ,IAHxC,OAIQ,OADMa,EAHd,gBAIcC,aAAIrI,EAAyBoI,IAJ3C,+BAMQ,OANR,oCAMcC,aAAIpI,KANlB,QAOQ,OAPR,UAOckI,aAAKG,MAAO,sCAP1B,uDAWA,SAAUN,KAAV,wEACkB,OADlB,SACwBO,aAAOpI,GAD/B,OAEI,OADMpC,EADV,gBAEUoK,aAAKrK,EAAyBC,GAFxC,wCAKO,SAAUkK,KAAV,kEACH,OADG,SACGO,aAAU1I,EAAkB2I,KAAMV,IADrC,OAEH,OAFG,SAEGS,aAAU,IAAKR,IAFlB,wC,iBClBkBU,IAAV,SAAUA,KAAV,kEACX,OADW,SACLC,aAAI,CACNV,OAFO,wCCIf,IAAMW,GAAiBC,eAEjBC,GAAQC,YAAe,CACzBC,QAAS,CACLjL,MAAOkL,IAEXC,WAAY,CAACN,MAGjBA,GAAeO,IAAIT,IAEJI,UCNAM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAUjB,MAAOA,GAAjB,SACA,eAAC,GAAD,QAGFkB,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.001052e6.chunk.js","sourcesContent":["const localStorageKey = \"tasks\";\n\nexport const saveTasksInLocalStorage = tasks =>\n    localStorage.setItem(localStorageKey, JSON.stringify(tasks));\n\nexport const getTasksFromLocalStorage = () => \n    JSON.parse(localStorage.getItem(localStorageKey))?.tasks || [];","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getTasksFromLocalStorage } from \"../../tasksLocalStorage\";\n\nconst taskSlice = createSlice({\n    name: 'tasks',\n    initialState: {\n        tasks: getTasksFromLocalStorage(),\n        hideDone: false,\n    },\n    reducers: {\n        addTask: ({ tasks }, { payload }) => {\n            tasks.push(payload)\n        },\n        toggleHideDone: state => {\n            state.hideDone = !state.hideDone;\n        },\n        toggleTaskDone: (state, action) => {\n            const index = state.tasks.findIndex(task => task.id === action.payload);\n            state.tasks[index].done = !state.tasks[index].done;\n        },\n        setAllDone: state => {\n            state.tasks.forEach(task => {\n                task.done = true;\n            });\n        },\n        removeTask: (state, action) => {\n            const removeIndex = state.tasks.findIndex(task => task.id === action.payload);\n            state.tasks.splice(removeIndex, +1);\n        },\n        fetchExampleTasks: state => { state.loading = true },\n        fetchExampleTasksSuccess: (state, { payload: tasks }) => {\n            state.tasks = tasks;\n            state.loading = false;\n        },\n        fetchExampleTasksError: (state) => {\n            state.loading = false;\n        },\n    },\n})\nexport const {\n    addTask,\n    fetchExampleTasksSuccess,\n    toggleHideDone,\n    toggleTaskDone,\n    setAllDone,\n    removeTask,\n    fetchExampleTasks,\n    fetchExampleTasksError,\n} = taskSlice.actions;\nexport const selectTaskState = state => state.tasks;\nexport const selectTask = state => selectTaskState(state).tasks;\nexport const selectHideDone = state => selectTaskState(state).hideDone;\nexport const getTaskById = (state, taskId) =>\n    selectTask(state).find(({ id }) => id === taskId);\nexport const selectTasksByQuery = (state, query) => {\n    const tasks = selectTask(state);\n    if (!query || query.trim() === \"\") {\n        return tasks;\n    }\n    return tasks.filter(({ content }) => content.toUpperCase().includes(query.trim().toUpperCase()));\n};\n\nexport const selectLoading = state => selectTaskState(state).loading;\nexport default taskSlice.reducer;","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n\n    @media (max-width: 767px) {\n    flex-wrap: wrap;\n    align-items: center;\n    };\n`;\n\nexport const Button = styled.button`\n    height: 40px;\n    margin-left: 15px;\n    margin-right: 15px;\n    width: 150px;\n    background-color: teal;\n    color: white;\n    border: none;\n    transition: 0.5s;\n\n    @media (max-width:767px) {\n    align-self: center;\n    margin-bottom: 20px;\n    width: 90%;\n    margin-right: auto;\n    margin-left: auto;\n    };\n\n    &:hover{\n    background-color: rgb(56, 179, 179);\n    transform: scale(1.1);\n    };\n`;\n\nexport const Input = styled.input`\n    font-size: 20px;\n    width: 100%;\n    padding: 10px;\n    height: 40px;\n    border: 1px solid rgb(214, 214, 214);\n\n    @media (max-width:767px) {\n    margin-right: 5%;\n    margin-left: 5%;\n    width: 90%;\n    };\n`;\n\nexport const Paragraph = styled.p`\n    flex-basis: 100%;\n    padding: 0px 0px 0px 20px;\n`;","import styled from \"styled-components\";\n\nexport const Input = styled.input`\n    font-size: 20px;\n    width: 100%;\n    padding: 10px;\n    height: 40px;\n    border: 1px solid rgb(214, 214, 214);\n\n    @media (max-width:767px) {\n    margin-right: 5%;\n    margin-left: 5%;\n    width: 90%;\n    };\n`;\n\nexport const Paragraph = styled.p`\n    flex-basis: 100%;\n    padding: 0px 0px 0px 20px;\n`;","import { nanoid } from \"@reduxjs/toolkit\";\nimport { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTask } from \"../state/tasksSlice\";\nimport { StyledForm, Button } from \"./styled\";\nimport { Input, Paragraph } from \"../../Input/index\"\n\nconst Form = () => {\n    const [content, setcontent] = useState(\"\");\n    const dispatch = useDispatch();\n    const inputRef = useRef(null);\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        dispatch(addTask({\n            content: content.trim(),\n            done: false,\n            id: nanoid(),\n        }));\n        addTask();\n        setcontent(\"\");\n        inputRef.current.focus();\n    };\n\n    return (\n        <StyledForm onSubmit={onFormSubmit}>\n            <Paragraph>\n                <label>\n                    <Input\n                        ref={inputRef}\n                        value={content}\n                        onChange={({ target }) => setcontent(target.value)}\n                        placeholder=\"Co jest do zrobienia?\"\n                    />\n                </label>\n            </Paragraph>\n            <Button>\n                Dodaj zadanie\n            </Button>\n        </StyledForm>\n    );\n};\n\nexport default Form","import styled, { css } from \"styled-components\";\n\nexport const List = styled.ul`\n        margin: 0px;\n        list-style: none;\n        padding: 30px 30px;\n    `;\n\nexport const Item = styled.li`\n        display: flex;\n        border-bottom: 1px solid rgb(214, 214, 214);\n        padding: 10px 0px;\n        align-items: center;\n        word-break: break-all;\n    \n        ${({ hidden }) => hidden && css`\n            display: none;\n        `};\n    `;\n\nexport const Button = styled.button`\n        width: 25px;\n        height: 25px;\n        flex-shrink: 0;\n        border: none;\n\n        ${({ toggleDone }) => toggleDone && css`\n        margin-right: 10px;\n        background-color: darkgreen;\n        background-position: center;\n        transition: 0.5s;\n        background-size: cover;\n        color: white;\n\n        &:hover{\n        background-color: forestgreen;\n            }\n        `};\n\n        ${({ remove }) => remove && css`\n        margin-left: auto;\n        margin-right: 1px;\n        background-color: rgb(228, 39, 39);\n        background-position: center;\n        background-size: cover;\n        color: white;\n        transition: 0.5s;\n\n        &:hover{\n        background-color: rgb(255, 101, 45);\n            }\n        `};\n    `;\n\nexport const Content = styled.span`\n        ${({ done }) => done && css`\n        margin: 0 10px;\n        `};\n    `","import { Link, NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledNavLink = styled(NavLink)`\n    text-decoration: none;\n    color: white;\n\n    &.active {\n        font-weight: 700;\n    }\n`;\n\nexport const StyledLink = styled(Link)`\n    color: teal;\n    text-decoration: none;\n\n    &:hover{\n    color: rgb(56, 179, 179);\n    cursor: pointer;\n    };\n`;","const SearchQueryParamName = \"szukaj\";\n\nexport default SearchQueryParamName\n","import { List, Item, Button, Content } from \"./styled\";\nimport { toggleTaskDone, removeTask, selectTasksByQuery, selectHideDone } from \"../state/tasksSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router\";\nimport { StyledLink } from \"../../../App/styled\"\n\nimport SearchQueryParamName from \"../../SearchQueryParamName\";\n\nconst TasksList = () => {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n    const query = searchParams.get(SearchQueryParamName);\n\n    const tasks = useSelector(state => selectTasksByQuery(state, query));\n    const hideDone = useSelector(selectHideDone);\n    const dispatch = useDispatch();\n\n    return (\n        <List>\n            {tasks.map((task) => (\n                <Item\n                    key={task.id}\n                    hidden={task.done && hideDone}\n                >\n                    <Button\n                        onClick={() => dispatch(toggleTaskDone(task.id))}\n                        toggleDone\n                    >\n                        {task.done ? \"✔\" : \"\"}\n                    </Button>\n                    <Content\n                        done\n                    >\n                        <StyledLink to={`/zadania/${task.id}`}>{task.content}</StyledLink>\n                    </Content>\n                    <Button\n                        onClick={() => dispatch(removeTask(task.id))}\n                        remove\n                    >\n                        🗑\n                    </Button>\n                </Item>\n            ))}\n        </List>\n    );\n};\n\nexport default TasksList","import styled, { css } from \"styled-components\";\n\nexport const ButtonItem = styled.button`\n    border: none;\n    color: teal;\n    padding: 20px;\n    background-color: white;\n    transition: 0.5s;\n\n    @media (max-width: 767px) {\n    width: 100%;\n    };\n\n    &:hover{\n    color: rgb(56, 179, 179);\n    cursor: pointer;\n    };\n\n    ${({ disabled }) => disabled && css`\n        color: #ccc;\n        cursor: not-allowed;\n    `}\n\n    &:disabled{\n    color: #ccc;\n    };\n`;","import { useSelector, useDispatch } from \"react-redux\";\nimport { ButtonItem } from \"./styled\"\nimport { toggleHideDone, setAllDone, selectHideDone, selectTask } from \"../../../features/tasks/TasksPage/state/tasksSlice\";\n\nconst Buttons = () => {\n  const hideDone = useSelector(selectHideDone);\n  const tasks = useSelector(selectTask);\n  const dispatch = useDispatch();\n\n  if (tasks.length === 0)\n    return null;\n\n  return (\n    <div>\n      <ButtonItem\n        onClick={() => dispatch(toggleHideDone())}\n        disabled={tasks.every(({ done }) => done)}\n      >\n        {hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\n      </ButtonItem>\n      <ButtonItem\n        onClick={() => dispatch(setAllDone())}\n        disabled={tasks.every(({ done }) => done)}\n      >\n        Ukończ wszystkie\n      </ButtonItem>\n    </div>\n  );\n};\n\nexport default Buttons","import styled from \"styled-components\";\n\nexport const StyledSection = styled.section`\n    margin: 20px auto;\n    background-color: white;\n`;\n\nexport const SectionContainer = styled.div`\n    border-bottom: 1px solid rgb(214, 214, 214);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    @media (max-width: 767px) {\n    flex-wrap: wrap;\n    justify-content: center;\n    };\n`;\n\nexport const TitleWrapper = styled.h2`\n    padding: 20px;\n    font-size: 22px;\n    margin-bottom: 0;\n    margin-top: 0px;\n\n    @media (max-width: 767px) {\n    width: 100%;\n    };\n`;","import { TitleWrapper, StyledSection, SectionContainer } from \"./Styled\"\n\nconst Section = ({ title, body, extraHeaderContent }) => (\n    <StyledSection>\n        <SectionContainer>\n            <TitleWrapper>\n                {title}\n            </TitleWrapper>\n            {extraHeaderContent}\n        </SectionContainer>\n        {body}\n    </StyledSection>\n);\n\nexport default Section","import styled from \"styled-components\";\n\nexport const StyledHeader = styled.header`\n    margin-bottom: 25px;\n    font-size: 16px;\n`;\n\nexport const Title = styled.h1`\n    padding-top: 20px;\n    padding-bottom: 10px;\n\n    @media(max-width: 996px){\n    padding-top: 5px;\n    padding-bottom: 3px;\n    };\n`;","import { StyledHeader, Title } from \"./styled\";\n\nconst Header = ({ title }) => (\n    <StyledHeader>\n        <Title>\n            {title}\n        </Title>\n    </StyledHeader>\n);\n\nexport default Header","import styled from \"styled-components\";\n\nexport const Container = styled.main`\n    font-family: 'Ubuntu', sans-serif;\n    max-width: 750px;\n    margin: 0 auto;\n    height: 100vh;\n    box-sizing: border-box;\n\n@media (max-width: 996px) {\n    padding: 30px 20px;\n    };\n\n&*, ::after, ::before {\n    box-sizing: inherit;\n    };\n`;","import { Container }from \"./styled\"\n\nconst container = ({ children }) => (\n    <Container>\n        {children}\n    </Container>\n);\n\nexport default container","import { useDispatch, useSelector } from \"react-redux\";\nimport { ButtonItem } from \"../Buttons/styled\";\nimport { fetchExampleTasks, selectLoading } from \"../../../features/tasks/TasksPage/state/tasksSlice\";\n\nexport const Button = () => {\n    const dispatch = useDispatch();\n    const loading = useSelector(selectLoading);\n\n    return (\n        <ButtonItem disabled={loading} onClick={() => dispatch(fetchExampleTasks())}>\n            {\n                loading ? \"Ładowanie...\" : \"Pobierz przykładowe zadania\"\n            }\n        </ButtonItem>\n    )\n};","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    padding: 16px 20px;\n`;","import { useQueryParameter, useReplaceQueryParameter } from \"../../../../QueryParameters\";\nimport SearchQueryParamName from \"../../SearchQueryParamName\";\nimport { Input } from \"../Form/styled\"\nimport { Wrapper } from \"./styled\";\n\nconst Search = () => {\n    const query = useQueryParameter(SearchQueryParamName);\n    const replaceQueryParameter = useReplaceQueryParameter();\n\n    const onInputChange = ({ target }) => {\n        replaceQueryParameter({\n            key: SearchQueryParamName,\n            value: target.value.trim() !== \"\" ? target.value : undefined,\n        });\n    };\n\n    return (\n        <Wrapper>\n            <Input\n                placeholder=\"Filtruj zadania\"\n                value={query || \"\"}\n                onChange={onInputChange}\n            />\n        </Wrapper>\n    );\n};\n\nexport default Search","import { useLocation, useHistory } from \"react-router\"\n\nexport const useQueryParameter = key => {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n    return searchParams.get(key);\n}\n\nexport const useReplaceQueryParameter = () => {\n    const location = useLocation();\n    const history = useHistory();\n\n    return ({ key, value }) => {\n        const searchParams = new URLSearchParams(location.search);\n\n        if(value === undefined) {\n            searchParams.delete(key);\n        } else {\n            searchParams.set(key, value);\n        }\n\n        const newSearch = searchParams.toString();\n        history.push(`${location.pathname}?${newSearch}`)\n    }\n}","import Form from \"./Form\";\nimport TasksList from \"./TasksList\";\nimport Buttons from \"../../../common/section/Buttons\";\nimport Section from \"../../../common/section/Section\";\nimport Header from \"../../Header\";\nimport Container from \"../../../common/Container\";\nimport { Button } from \"../../../common/section/Button\";\nimport Search from \"./Search\";\n\nexport function TasksPage() {\n\n  return (\n    <Container>\n      <Header\n        title=\"Lista zadań\"\n      />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={\n          < Form />\n        }\n        extraHeaderContent={\n          <Button />\n        }\n      />\n      <Section\n        title=\"Wyszukiwarka\"\n        body={\n          <Search />\n        }\n      />\n      <Section\n        title=\"Lista zadań\"\n        body={\n          <TasksList />\n        }\n        extraHeaderContent={\n          <Buttons />\n        }\n      />\n    </Container>\n  );\n};\n\n\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    padding: 20px;\n`;","import Section from \"../../../common/section/Section\";\nimport Header from \"../../Header\";\nimport Container from \"../../../common/Container\";\nimport { useParams } from \"react-router\";\nimport { useSelector } from \"react-redux\";\nimport { getTaskById } from \"../TasksPage/state/tasksSlice\";\nimport { Wrapper } from \"./styled\";\n\nexport function TaskPage() {\n    const { id } = useParams();\n    const task = useSelector(state => getTaskById(state, id));\n \n  return (\n    <Container>\n      <Header\n        title=\"Szczegóły zadania\"\n      />\n      <Section\n        title={task ? task.content : \"Nie znaleziono zadania\"}\n        body={!!task && (\n            <Wrapper>\n              <strong>Ukończono:</strong> {task.done ? \"Tak\" : \"Nie\"}\n            </Wrapper>\n        )}\n        />\n    </Container>\n  );\n};","import styled from \"styled-components\";\n\nexport const Article = styled.article`\n    padding: 30px;\n    font-size: 100%;\n    line-height: 1.15;\n    letter-spacing: 0.3px;\n`;\n\nexport const Paragraph = styled.p`\n    margin: 0px 0px 15px 0px;\n`;","import Section from \"../../common/section/Section/\";\nimport Header from \"../Header\";\nimport Container from \"../../common/Container\";\nimport { Article, Paragraph } from \"./styled\";\n\nexport const AuthorPage = () => {\n    return (\n        <Container>\n            <Header\n                title=\"O Autorze\"\n            />\n            <Section\n                title=\"Przemek Przybylak\"\n                body={\n                    <>\n                        <Article>\n                           <Paragraph> \n                            Nazywam się Przemysław Przybylak budową stron interesuję się od 2021 roku.\n                            Obecnie moim głównym celem jest zostanie frontend developerem. Chcę jak najszybciej zostać\n                            profesjonalistą i rozpocząć swoją przygodę w branży IT!\n                            </Paragraph>\n                            <Paragraph>\n                                Prywatnie jestem ojcem 2 dzieci. Są to dziewczynki pierwsza ma na imię <em>Ola</em>, a druga \n                            <em> Natalia</em>. Niedługo nasza rodzina powiększy się o kolejnego członka rodziny, a mianowicie o\n                            <em> Magdalenę</em>.\n                            </Paragraph>\n                            <Paragraph>\n                            Kocham podróżować, oraz przebywać na łonie natury. Nieważne czy Tatry, czy pobliski las, przyroda od\n                            zawsze była dla mnie źródłem potężnego spokoju wewnętrznego, oraz natchnienia.\n                            </Paragraph>\n                        </Article>\n                    </>\n                }\n            />\n        </Container>\n    )\n}","import styled from \"styled-components\";\n\nexport const Ul = styled.ul`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: teal;\n    color: white;\n    margin: 0px;\n    padding: 0px;\n`;\n\nexport const Li = styled.li`\n    list-style-type: none;\n    padding: 5px;\n    font-size: 20px;\n    margin: 10px 20px;\n`;\n\n","import { StyledNavLink } from \"../App/styled\";\nimport { Ul, Li } from \"./styled\"\n\n\nexport const NavList = () => {\n    return (\n        <Ul>\n            <Li>\n                <StyledNavLink to=\"/zadania\">Zadania</StyledNavLink>\n            </Li>\n            <Li>\n                <StyledNavLink to=\"/author\">O autorze</StyledNavLink>\n            </Li>\n        </Ul>\n    )\n}","import { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { TasksPage } from \"../tasks/TasksPage\";\nimport { TaskPage } from \"../tasks/TaskPage\"\nimport { AuthorPage } from \"../author/AuthorPage\";\nimport { NavList } from \"../NavList\";\n\n\nexport const App = () =>\n    <HashRouter>\n        <nav>\n            <NavList />\n            <Switch>\n                <Route path=\"/zadania/:id\">\n                    <TaskPage />\n                </Route>\n                <Route path=\"/zadania\">\n                    <TasksPage />\n                </Route>\n                <Route path=\"/author\">\n                    <AuthorPage />\n                </Route>\n                <Route path=\"/\">\n                    <Redirect to=\"/zadania\" />\n                </Route>\n            </Switch>\n        </nav>\n    </HashRouter>\n    ;\n\n","export const getExampleTasks = async () => {\n    const response = await fetch(\"/To-Do-List-React/exampleTasks.json\");\n\n    if (!response.ok) {\n        new Error(response.statusText);\n    }\n\n    return await response.json();\n};","import { takeEvery, call, put, select, delay } from \"redux-saga/effects\";\nimport { fetchExampleTasks, selectTaskState, fetchExampleTasksSuccess, fetchExampleTasksError } from \"./tasksSlice\";\nimport { getExampleTasks } from \"../../getExamplesTasks\";\nimport { saveTasksInLocalStorage} from \"../../tasksLocalStorage\"\n\nfunction* FetchExampleTasksHandler() {\n    try {\n        yield delay(1000);\n        const exampleTasks = yield call(getExampleTasks);\n        yield put(fetchExampleTasksSuccess(exampleTasks));\n    } catch (error) {\n        yield put(fetchExampleTasksError());\n        yield call(alert, \"Hej, coś poszło nie tak!\");\n    }\n}\n\nfunction* saveTasksInLocalStorageHandler() {\n    const tasks = yield select(selectTaskState);\n    yield call(saveTasksInLocalStorage, tasks)\n}\n\nexport function* tasksSaga() {\n    yield takeEvery(fetchExampleTasks.type, FetchExampleTasksHandler);\n    yield takeEvery(\"*\", saveTasksInLocalStorageHandler);\n}","import { all } from \"@redux-saga/core/effects\";\nimport { tasksSaga } from \"../features/tasks/TasksPage/state/tasksSaga\";\n\nexport default function* rootSaga() {\n    yield all([\n        tasksSaga(),\n    ])\n}","import { configureStore } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport tasksReducer from '../features/tasks/TasksPage/state/tasksSlice';\nimport rootSaga from \"./rootSaga\";\n\n\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n    reducer: {\n        tasks: tasksReducer,\n    },\n    middleware: [sagaMiddleware],\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport { App } from './features/App/App';\nimport store from './core/store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}